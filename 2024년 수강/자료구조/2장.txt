 * 순서 리스트
배열이라고 생각

삽입, 삭제 시 오버헤드가 있다


 * 다항식  polynomial
구성 요소는
 1. 계수
 2. 지수
 3. 차수

 계수  coefficient
변수 앞에 붙어 있는 상수

 지수  exponent
몇 승을 의미

 차수  degree
0이 아닌 가장 큰 지수

 희소 다항식
계수가 0인 항이 많은 다항식


클래스에서 배열의 크기를 미리 설정하는 것은
메모리 낭비가 심할 수 있다
-> 동적 할당을 통해서 메모리 낭비를 최소화 하자 


 * 다항식 클래스
희소 다항식은 값이 0인 경우가 많아서 메모리 낭비가 심하다
-> 2차원 배열을 통해 해결
(지수, 계수) 쌍을 배열에 저장

다항식 덧셈의 시간 복잡도는 O(m+n)


 * 희소 행렬  sparse matrics
0이 아닌 원소 수가 많은 행렬
-> 0이 아닌 원소만 저장해서 시간과 공간 절약

행렬 연산은
 1. 생성
 2. 전치
 3. 덧셈
 4. 곱셈

희소 행렬을 효율적으로 표현하기 위해서는
 1. n x 3의 2차원 배열을 만들고
 2. 행 열 원소값을 넣는다

행렬의 전치의 경우에는
열 값을 기준으로 먼저 전치시킨다


 * 스트링 추상 데이터 타입
S(i) 문자 집합의 원소
S(n=0) 공백 또는 널 문자열

기능은
 1. 새로운 공백 스트링 생성
 2. 스트링 읽기
 3. 스트링 출력
 4. 두 스트링 접합
 5. 스트링 복사
 6. 스트링 비교
 7. 서브 스트링을 스트링에 삽입
 8. 스트링에서 서브 스트링 삭제
 9. 스트링에서 특정 패턴 검색


 * 스트링 패턴 매치
s.Find(pat)
스트링 s에서 스트링 pat를 찾은 후
인덱스 i를 반환한다

 LengthP
패턴 pat의 길이

 LengthS
스트링 s의 길이


 * 스프링 패턴 매치 : KMP 알고리즘